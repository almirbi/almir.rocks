window.addEventListener("load",()=>{function e(){window.removeEventListener("scroll",e);let t,r=document.querySelector("#game-wrapper .icons"),n=["angularjs","apache","bootstrap","bower","c","cplusplus","csharp","css3","vagrant","debian","docker","dot-net","html5","jasmine","javascript","jquery","mongodb","mysql","nginx","php-flat","react","typescript","ubuntu","wordpress"];n.forEach((e,a)=>{a%parseInt(n.length/3)!=0&&0!==a||(t=document.createElement("br"),r.appendChild(t));let s=document.createElement("img"),c=document.createElement("div");c.className="icon",s.alt=e,s.title=e,s.src="assets/images/"+e+".svg",c.dataset.name=e,c.appendChild(s),r.appendChild(c)});new Game}window.addEventListener("scroll",e),[...document.querySelectorAll("img")].forEach(e=>{e.dataset.src&&(e.src=e.dataset.src)})},!1),window.addEventListener("resize",()=>{resizeHomeSection()});let links=[...document.querySelectorAll("a[href^='#'")];links.forEach(e=>{e.addEventListener("click",t=>(t.preventDefault(),document.querySelector(e.getAttribute("href")).scrollIntoView({behavior:"smooth"}),!1))});


function preventDefault(t){(t=t||window.event).preventDefault&&t.preventDefault(),t.returnValue=!1}function preventDefaultForScrollKeys(t){if(keys[t.keyCode])return preventDefault(t),!1}function disableScroll(){window.addEventListener&&window.addEventListener("DOMMouseScroll",preventDefault,!1),window.onwheel=preventDefault,window.onmousewheel=document.onmousewheel=preventDefault,window.ontouchmove=preventDefault,document.onkeydown=preventDefaultForScrollKeys}function enableScroll(){window.removeEventListener&&window.removeEventListener("DOMMouseScroll",preventDefault,!1),window.onmousewheel=document.onmousewheel=null,window.onwheel=null,window.ontouchmove=null,document.onkeydown=null}const State={PAUSED:"paused",VIRGIN:"virgin",RUNNING:"running",LOST:"lost"};window.mobilecheck=function(){var t=!1;return function(e){(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4)))&&(t=!0)}(navigator.userAgent||navigator.vendor||window.opera),t};var keys={37:1,38:1,39:1,40:1};const DEFAULT_SPEED=mobilecheck()?4:8;console.log(`Speed set to ${DEFAULT_SPEED}`);class Game{constructor(){this.ball=document.getElementById("ball"),this.pad=document.getElementById("pad"),this.gameWindow=document.getElementById("game-wrapper"),this.bricks=Array.prototype.slice.call(document.querySelectorAll("#game-wrapper .icons > .icon")),this.isDragging=!1,this.direction={x:1,y:1},this.state=State.VIRGIN,this.settings={ballSpeed:DEFAULT_SPEED},this.isFirefox=navigator.userAgent.toLowerCase().indexOf("firefox")>-1,this.pad.addEventListener("touchstart",this.handleStart.bind(this),!1),this.pad.addEventListener("mousedown",this.handleStart.bind(this),!1),document.addEventListener("touchend",this.handleEnd.bind(this),!1),document.addEventListener("touchcancel",this.handleEnd.bind(this),!1),document.addEventListener("mouseup",this.handleEnd.bind(this),!1),document.addEventListener("touchmove",this.handleMove.bind(this),!1),document.addEventListener("mousemove",this.handleMove.bind(this),!1)}handleMove(t){if(this.isDragging){t.stopPropagation&&t.stopPropagation(),t.preventDefault&&t.preventDefault(),t.cancelBubble=!0,t.returnValue=!1;let{x:e,y:i}=this.getWindowDimensions(),s="";s=(t.clientX||t.touches[0].clientX)-(e-this.gameWindow.offsetWidth)/2+"px",this.pad.style.setProperty("left",s)}return!1}handleEnd(t){0!=t.button&&void 0!==t.button||(this.isDragging=!1,this.removeMessageTimeout&&clearTimeout(this.removeMessageTimeout),enableScroll(),this.gameWindow.classList.add("paused"),this.slowBallDown(()=>{this.isDragging?this.startMovingSmooth(()=>{this.play()}):this.pauseGame()}))}handleStart(t){if(t.stopPropagation&&t.stopPropagation(),t.preventDefault&&t.preventDefault(),t.cancelBubble=!0,t.returnValue=!1,0==t.button||void 0===t.button)switch(this.isDragging=!0,this.removeMessageTimeout=setTimeout(()=>{let t=document.querySelector(".explanation-wrapper"),e=t.querySelector("span > img");if(!e)return;let i=t.querySelector("span > span");t.style.setProperty("height",t.offsetHeight+"px"),e.parentElement.removeChild(e),i.innerHTML="Release to pause"},3e3),disableScroll(),this.state){case State.VIRGIN:this.gameWindow.className="",this.launchBall();break;case State.LOST:this.resetGame();break;case State.PAUSED:this.startMovingSmooth(()=>{this.play()})}return!1}getWindowDimensions(){let t=window,e=document,i=e.documentElement,s=e.getElementsByTagName("body")[0];return{x:t.innerWidth||i.clientWidth||s.clientWidth,y:t.innerHeight||i.clientHeight||s.clientHeight}}launchBall(){this.play(),this.moveBall()}getElementOffsetTop(t){let e=getComputedStyle(this.gameWindow),i=parseInt(e["border-top-width"]);return this.isFirefox?t.offsetTop-i:t.offsetTop}getElementOffsetLeft(t){let e=getComputedStyle(this.gameWindow),i=parseInt(e["border-left-width"]);return this.isFirefox?t.offsetLeft-i:t.offsetLeft}resetGame(){this.state==State.LOST&&(this.gameWindow.classList.remove("lost"),this.ball.style.display="block",this.ball.style.left=this.getElementOffsetLeft(this.pad)+(this.pad.offsetWidth-this.ball.offsetWidth/2)+"px",this.ball.style.top=this.getElementOffsetTop(this.pad.parentElement)-this.ball.offsetHeight+"px",this.state=State.RUNNING,this.gameWindow.className="",this.settings.ballSpeed=DEFAULT_SPEED,this.direction={x:1,y:1},this.launchBall())}endGame(){this.state=State.LOST,this.gameWindow.classList.add("lost"),this.ball.style.display="none"}slowBallDown(t){let e=setInterval(()=>{if(0==this.settings.ballSpeed--||this.isDragging)return clearInterval(e),void t()},100)}startMovingSmooth(t){if(t(),this.settings.ballSpeed==DEFAULT_SPEED)return;let e=setInterval(()=>{if(this.settings.ballSpeed++>=5)return clearInterval(e),this.settings.ballSpeed=DEFAULT_SPEED,void this.gameWindow.classList.remove("paused")},100)}pauseGame(){this.state==State.RUNNING&&(this.state=State.PAUSED)}play(){this.state=State.RUNNING}collision(t,e,i=!0){let s,o;i?(s={radius:t.offsetHeight/2,x:this.getElementOffsetLeft(t)+t.offsetHeight/2,y:this.gameWindow.offsetHeight-this.getElementOffsetTop(t)-t.offsetWidth/2},o={radius:e.offsetWidth/2,x:this.getElementOffsetLeft(e)+e.offsetWidth/2,y:this.gameWindow.offsetHeight-this.getElementOffsetTop(e)-e.offsetWidth/2}):(s=t,o=e);var n=s.x-o.x,a=s.y-o.y;let l=Math.sqrt(n*n+a*a)<=s.radius+o.radius;return s.x-=o.x,s.y-=o.y,!!l&&{x:s.x/Math.abs(s.x),y:s.y/Math.abs(s.y)}}blinkBorder(t){if("pad"==t)return;let e=t.toLowerCase();e=e.charAt(0).toUpperCase()+e.slice(1),this.gameWindow.style["border"+e+"Color"]="grey",setTimeout(()=>{this.gameWindow.style["border"+e+"Color"]="transparent"},1e3)}bounce(){let t=this.gameWindow.offsetWidth,e=this.gameWindow.offsetHeight;if(this.pad.parentElement.offsetTop+10<this.ball.offsetTop+this.ball.offsetHeight)throw"Lost";if(this.getElementOffsetLeft(this.ball)<=0&&-1===this.direction.x)return this.ball.style.setProperty("left",0),this.direction.x=1,"left";if(this.getElementOffsetTop(this.ball)<=0&&1===this.direction.y)return this.ball.style.setProperty("top",0),this.direction.y=-1,"top";if(this.getElementOffsetLeft(this.ball)>=t-parseInt(this.ball.offsetWidth)&&1===this.direction.x)return this.ball.style.setProperty("top",e-parseInt(this.ball.offsetHeight)),this.direction.x=-1,"right";let i={radius:this.pad.offsetHeight/2,x:this.getElementOffsetLeft(this.pad)+this.pad.offsetWidth-this.pad.offsetHeight/2,y:this.gameWindow.offsetHeight-this.getElementOffsetTop(this.pad)-this.pad.offsetWidth/2},s={radius:this.pad.offsetHeight/2,x:this.getElementOffsetLeft(this.pad)-this.pad.offsetWidth+this.pad.offsetHeight/2,y:this.gameWindow.offsetHeight-this.getElementOffsetTop(this.pad)-this.pad.offsetWidth/2},o={radius:this.ball.offsetHeight/2,x:this.getElementOffsetLeft(this.ball)+this.ball.offsetHeight/2,y:this.gameWindow.offsetHeight-this.getElementOffsetTop(this.ball)-this.ball.offsetWidth/2};return this.collision(i,o,!1)?(this.direction.x=1,this.direction.y=1):this.collision(s,o,!1)&&(this.direction.x=-1,this.direction.y=1),this.getElementOffsetTop(this.ball)+21>=e-parseInt(this.ball.offsetHeight)&&-1===this.direction.y&&this.getElementOffsetLeft(this.ball)>this.getElementOffsetLeft(this.pad)-this.ball.offsetWidth-5&&this.getElementOffsetLeft(this.ball)<this.getElementOffsetLeft(this.pad)+this.pad.offsetWidth&&(this.direction.y=1),"pad"}killBrick(t){t.classList.add("dead");let e;for(let t=0;t<this.bricks.length;t++)if(this.bricks[t].classList.contains("dead")){e=t;break}ga("send",{hitType:"event",eventCategory:"Game",eventAction:"broken",eventLabel:"Brick Hits",eventValue:t.dataset.name}),this.bricks.splice(e,1)}moveBall(){try{if(this.state==State.PAUSED)return void requestAnimationFrame(()=>{this.moveBall()});for(let t=0;t<this.settings.ballSpeed;t++){let t=this.bounce();t&&this.blinkBorder(t);let e=this.getElementOffsetLeft(this.ball)+this.direction.x+"px",i=this.getElementOffsetTop(this.ball)+-1*this.direction.y+"px";this.ball.style.setProperty("left",e),this.ball.style.setProperty("top",i);let s=this.getElementOffsetTop(this.ball),o=document.querySelector("div.icons .icon:last-child");s<this.getElementOffsetTop(o)+o.offsetHeight&&this.bricks.forEach(t=>{let e=this.collision(this.ball,t);(e.x||e.y)&&(this.settings.ballSpeed===DEFAULT_SPEED&&this.killBrick(t),e.x&&(this.direction.x=e.x),e.y&&(this.direction.y=e.y))})}requestAnimationFrame(()=>{this.moveBall()})}catch(t){if("Lost"!==t)throw this.endGame(),t;this.endGame()}}}


//# sourceMappingURL=data:application/json;charset=utf8;base64,
